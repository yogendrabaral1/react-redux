{"version":3,"sources":["utils.js","Store/reducers/testReducer.js","Store/store.js","components/FriendsList/FriendsList.js","App.js","index.js"],"names":["sortList","arr","sort","a","b","isFavorite","initialState","friends","id","uuid","name","isFriend","store","createStore","state","action","type","list","i","length","payload","splice","status","toLowerCase","alert","FriendsList","useState","lists","setLists","inputVal","setInputVal","updateState","getState","items","useEffect","subscribe","className","placeholder","value","onChange","e","target","onKeyUp","keyCode","dispatch","result","filter","item","includes","handleInputChange","itemsPerPage","renderList","map","index","onClick","handleFavorite","window","confirm","handleDelete","aria-hidden","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b37d12d.chunk.js","sourcesContent":["export const sortList = (arr) => {\n    return arr.sort((a,b) => b.isFavorite - a.isFavorite);\n}","import { sortList } from \"../../utils\";\nimport uuid from 'react-uuid';\n\nconst initialState = {\n    friends: [\n        {\n            id: uuid(),\n            name: \"Yogendra Baral\",\n            isFriend: true,\n            isFavorite: true,\n        },\n        {\n            id: uuid(),\n            name: \"Shivangi Sharma\",\n            isFriend: true,\n            isFavorite: false,\n        },\n        {\n            id: uuid(),\n            name: \"Akash Singh\",\n            isFriend: true,\n            isFavorite: false,\n        },\n        {\n            id: uuid(),\n            name: \"Rahul Gupta\",\n            isFriend: true,\n            isFavorite: true,\n        },\n    ]\n};\n\nexport function TestReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'makeFavorite':\n            var list = state.friends;\n            for(let i=0;i<list.length;i++){\n                if(list[i].id === action.payload){\n                    list[i].isFavorite = !list[i].isFavorite\n                }   \n            }\n            list = sortList(list);\n            return {\n                ...state,\n                friends: [...list],\n            };\n        case 'delete':\n            var list = state.friends;\n            for(let i=0;i<list.length;i++){\n                if(list[i].id === action.payload.id){\n                    list.splice(action.payload, 1);\n                }\n            }\n            return {\n                ...state,\n                friends: [...list],\n            };\n        case 'addFriend':\n            var list = state.friends;\n            let status;\n            for(let i=0;i<list.length;i++){\n                if(action.payload.toLowerCase() === list[i].name.toLowerCase()){\n                    status = true;\n                    alert(\"Friend already in list\");\n                    break;\n                }\n            }\n            if(!status){\n                list = [\n                    {\n                        id: uuid(),\n                        name: action.payload,\n                        isFriend: true,\n                        isFavorite: false,\n                    },\n                    ...list\n                ]\n                // list.push({\n                //     name: action.payload,\n                //     isFriend: true,\n                //     isFavorite: false,\n                // });\n            }\n            return {\n                ...state,\n                friends: [...list],\n            };\n        default:\n            return state;\n    }\n}\n","import { createStore } from 'redux';\nimport { TestReducer } from './reducers/testReducer';\n\nexport const store = createStore(TestReducer);\n","import React, { useEffect, useState } from 'react';\nimport { PaginatedList } from 'react-paginated-list';\n\nimport {store} from \"../../Store/store\";\nimport { sortList } from '../../utils';\n\nimport \"./FriendsList.css\";\n\nfunction FriendsList() {\n    const [lists, setLists] = useState([]);\n    const [inputVal, setInputVal] = useState('');\n\n    const handleFavorite = (item) => {\n        store.dispatch({\n            type: \"makeFavorite\",\n            payload: item\n        });\n    }\n\n    const handleDelete = (item, id) => {\n        if (window.confirm(\"Do you want to Delete?\") == true) {\n            store.dispatch({\n                type: \"delete\",\n                payload: {\n                    item: item,\n                    id: id\n                }\n            })\n        }\n    }\n\n    const handleInputChange = (e) => {\n        if(e.keyCode === 13){\n            setInputVal('');\n            store.dispatch({\n                type: \"addFriend\",\n                payload: e.target.value\n            });\n        }\n        else {\n            var result = store.getState();\n            result = result.friends;\n            if(e.target.value !== '' ){\n                result = result.filter(item => item.name.toLowerCase().includes(e.target.value.toLowerCase()));\n            }\n            setLists(result);\n        }\n    }\n\n    const updateState = () => {\n        const state = store.getState();\n        var items = sortList(state.friends);\n        setLists(items);\n    }\n\n    useEffect(() => {\n        updateState();\n        store.subscribe(updateState);\n    }, []);\n\n    return (\n        <div className='friendsListWrapper'>\n            <p className='heading'>Friends List</p>\n            <input type=\"text\" placeholder='Enter your friends name' value={inputVal} onChange={(e) => setInputVal(e.target.value)} onKeyUp={(e) => handleInputChange(e)} />\n            {/* {\n                lists && lists.length > 0 &&\n                <ul className='listItems'>\n                    {\n                        lists.map((item, index) => (\n                            <li key={index}>\n                                <p>\n                                    <span>{item.name}</span>\n                                    <span className='isFriendText'>{item.isFriend ? \"is your friend\" : \"is not your friend\"}</span>\n                                </p>\n                                <span className='favoriteStar' onClick={() => handleFavorite(index)}>\n                                    <i className={`${item.isFavorite ? 'fa-solid favorite' : 'fa-regular'} fa-star`}></i>\n                                </span>\n                                <span className='deleteIcon' onClick={() => handleDelete(index)}>\n                                    <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                                </span>\n                            </li>\n                        ))\n                    }\n                </ul>\n            } */}\n            <PaginatedList\n                list={lists}\n                itemsPerPage={4}\n                renderList={(lists) => (\n                    <ul className='listItems'>\n                        {\n                            lists.map((item, index) => (\n                                <li key={index} id={item.id}>\n                                    <p>\n                                        <span>{item.name}</span>\n                                        <span className='isFriendText'>{item.isFriend ? \"is your friend\" : \"is not your friend\"}</span>\n                                    </p>\n                                    <span className='favoriteStar' onClick={() => handleFavorite(item.id)}>\n                                        <i className={`${item.isFavorite ? 'fa-solid favorite' : 'fa-regular'} fa-star`}></i>\n                                    </span>\n                                    <span className='deleteIcon' onClick={() => handleDelete(index, item.id)}>\n                                        <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                                    </span>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                )}\n            />\n        </div>\n    )\n}\n\nexport default FriendsList\n","import './App.css';\n\nimport FriendsList from './components/FriendsList/FriendsList';\n\nfunction App() {\n    return (\n        <div className='App'>\n            <FriendsList />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}